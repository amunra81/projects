;; Analyzed by ClojureScript 0.0-3308
{:use-macros nil, :excludes #{}, :name awesome-project.core, :imports nil, :requires {om om.core, om.core om.core}, :uses nil, :defs {view {:protocol-inline nil, :meta {:file "/Users/horus/projects/clojure/Awesome/AwesomeProject/awesome-project/src/awesome_project/core.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([opts & children])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts children)], :arglists ([opts & children]), :arglists-meta (nil)}}, :name awesome-project.core/view, :variadic true, :file "src/awesome_project/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts children)], :arglists ([opts & children]), :arglists-meta (nil)}, :method-params [(opts children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists ([opts & children])}, text {:protocol-inline nil, :meta {:file "/Users/horus/projects/clojure/Awesome/AwesomeProject/awesome-project/src/awesome_project/core.cljs", :line 16, :column 7, :end-line 16, :end-column 11, :arglists (quote ([opts & children])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts children)], :arglists ([opts & children]), :arglists-meta (nil)}}, :name awesome-project.core/text, :variadic true, :file "src/awesome_project/core.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(opts children)], :arglists ([opts & children]), :arglists-meta (nil)}, :method-params [(opts children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists ([opts & children])}, app-state {:name awesome-project.core/app-state, :file "src/awesome_project/core.cljs", :line 22, :column 1, :end-line 22, :end-column 19, :meta {:file "/Users/horus/projects/clojure/Awesome/AwesomeProject/awesome-project/src/awesome_project/core.cljs", :line 22, :column 10, :end-line 22, :end-column 19}}, widget {:protocol-inline nil, :meta {:file "/Users/horus/projects/clojure/Awesome/AwesomeProject/awesome-project/src/awesome_project/core.cljs", :line 24, :column 7, :end-line 24, :end-column 13, :arglists (quote ([data owner]))}, :name awesome-project.core/widget, :variadic false, :file "src/awesome_project/core.cljs", :end-column 13, :method-params ([data owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner]))}, t6614 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name awesome-project.core/t6614, :file "src/awesome_project/core.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6614 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta6615])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name awesome-project.core/->t6614, :variadic false, :file "src/awesome_project/core.cljs", :method-params ([widget data owner meta6615]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta6615])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t6617 {:num-fields 4, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name awesome-project.core/t6617, :file "src/awesome_project/core.cljs", :type true, :anonymous true, :column 3, :line 25, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t6617 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([widget data owner meta6618])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name awesome-project.core/->t6617, :variadic false, :file "src/awesome_project/core.cljs", :method-params ([widget data owner meta6618]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 25, :max-fixed-arity 4, :fn-var true, :arglists (quote ([widget data owner meta6618])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, init {:protocol-inline nil, :meta {:file "/Users/horus/projects/clojure/Awesome/AwesomeProject/awesome-project/src/awesome_project/core.cljs", :line 33, :column 16, :end-line 33, :end-column 20, :export true, :arglists (quote ([]))}, :name awesome-project.core/init, :variadic false, :file "src/awesome_project/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.core, om.core om.core}, :cljs.analyzer/constants {:seen #{:flexDirection :style :target :backgroundColor :text :margin}, :order [:text :style :flexDirection :margin :backgroundColor :target]}, :doc nil}